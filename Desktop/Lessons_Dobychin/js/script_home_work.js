// 1 задание, Задать температуру в градусах по Цельсию
    let Tc = prompt("Введите температуру в Цельсиях.");
    let Tf = (9 / 5) * Tc + 32; //температура по Фарингейту
    alert("Температура по Фаренгейту "+Tf +". Исходное значение в Цельсиях "+Tc +".");

// 2 задание, Работа с переменными, вывести typeoff
    console.log(typeof 42); //"number"
    console.log(typeof 'blubber'); // "string"
    console.log(typeof true);//  "boolean"
    console.log(typeof withoutType);//  "undefined";


// 3 задание, Скопировать значение из name в admin
    let name = "Василий";
    let admin = name;
    alert(admin);

// 4 задание, Чему будет равно JS-выражение 1000 + "108";
    let x =1000 + "108";
    alert(x); // вывелось 1000108

// 5 задание, async и defer
/** Атрибут async
 Поддерживается всеми браузерами, кроме IE9-. Скрипт выполняется полностью асинхронно.
 То есть, при обнаружении <script async src="..."> браузер не останавливает обработку страницы,
 а спокойно работает дальше. Когда скрипт будет загружен – он выполнится.
 */
/** Атрибут defer
 Поддерживается всеми браузерами, включая самые старые IE. Скрипт также выполняется асинхронно,
 не заставляет ждать страницу, но есть два отличия от async.
 Первое – браузер гарантирует, что относительный порядок скриптов с defer будет сохранён.
 Поэтому атрибут defer используют в тех случаях, когда второй скрипт 2.js зависит от первого 1.js,
 к примеру – использует что-то, описанное первым скриптом.
 Второе отличие – скрипт с defer сработает, когда весь HTML-документ будет обработан браузером.
 */
